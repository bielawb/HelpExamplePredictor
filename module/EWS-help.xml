<?xml version="1.0" encoding="utf-8"?>
<helpItems xmlns="http://msh" schema="maml">

<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Clear-EWSFolder</command:name>
<command:verb>Clear</command:verb>
<command:noun>EWSFolder</command:noun>
<maml:description><maml:para>Clears content of a folder.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Function used to clear content of select folder. By default it will only wipe items in the folder specified. When used with the flag 'Include Sub-folders' it will wipe both items and folders in selected folder.
</maml:para>
<maml:para>User can specify mode that will be used to delete items/folders: - MoveToDeletedItems (default)
</maml:para>
<maml:para>- SoftDelete
</maml:para>
<maml:para>- HardDelete.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Clear-EWSFolder</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>DeleteMode</maml:name>
<maml:Description><maml:para>Mode that should be used when removing items/folders. Will use MoveToDeletedItems mode when nothing is specified.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">HardDelete</command:parameterValue>
<command:parameterValue required="false" variableLength="false">SoftDelete</command:parameterValue>
<command:parameterValue required="false" variableLength="false">MoveToDeletedItems</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">DeleteMode</command:parameterValue>
<dev:type><maml:name>DeleteMode</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to move folder.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="2" aliases="none"><maml:name>Folder</maml:name>
<maml:Description><maml:para>Folder object that should be moved (retrieved using Get-EWSFolder).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Folder</command:parameterValue>
<dev:type><maml:name>Folder</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the function.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>IncludeSubfolders</maml:name>
<maml:Description><maml:para>Flag to specify if sub-folders and items in them should be removed too.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the function runs. The function is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the function.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>DeleteMode</maml:name>
<maml:Description><maml:para>Mode that should be used when removing items/folders. Will use MoveToDeletedItems mode when nothing is specified.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">DeleteMode</command:parameterValue>
<dev:type><maml:name>DeleteMode</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="2" aliases="none"><maml:name>Folder</maml:name>
<maml:Description><maml:para>Folder object that should be moved (retrieved using Get-EWSFolder).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Folder</command:parameterValue>
<dev:type><maml:name>Folder</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>IncludeSubfolders</maml:name>
<maml:Description><maml:para>Flag to specify if sub-folders and items in them should be removed too.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to move folder.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the function runs. The function is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Exchange.WebServices.Data.ExchangeService</maml:name>
</dev:type>
<maml:description><maml:para>Microsoft.Exchange.WebServices.Data.Folder
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>System.Object</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
<dev:code>PS C:\&gt; Get-EWSFolder Inbox\ToDelete | Clear-EWSFolder</dev:code>
<dev:remarks><maml:para>Clears content of Inbox\ToDelete folder, leaving sub-folders intact. Will prompt the user before performing the operation. Uses MoveToDeletedItems mode to remove items (default).
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
<dev:code>PS C:\&gt; Get-EWSFolder Inbox\ToDelete | Clear-EWSFolder -IncludeSubfolders -Confirm:$false -DeleteMode HardDelete</dev:code>
<dev:remarks><maml:para>Clears content of Inbox\ToDelete folder, including sub-folders and items found in them. Will not prompt the user before performing the operation. Uses HardDelete mode to remove items/folders.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Connect-EWSService</command:name>
<command:verb>Connect</command:verb>
<command:noun>EWSService</command:noun>
<maml:description><maml:para>Connects to Exchange Web Service.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Function that needs to be used first in order to create connection to Exchange Web Service. It supports both user-provided credentials and default credentials. By default it will attempt to auto-discover service URL. User may decide to provide it manually.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Connect-EWSService</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Mailbox</maml:name>
<maml:Description><maml:para>Mailbox that supports Exchange Web Services.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>ServiceUrl</maml:name>
<maml:Description><maml:para>Optional URL to service (when specified, auto-discovery is not used).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>Version</maml:name>
<maml:Description><maml:para>Version of Exchange Web Service.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">Exchange2007_SP1</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Exchange2010</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Exchange2010_SP1</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Exchange2010_SP2</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Exchange2013</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Exchange2013_SP1</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">ExchangeVersion</command:parameterValue>
<dev:type><maml:name>ExchangeVersion</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none"><maml:name>Credential</maml:name>
<maml:Description><maml:para>Credentials used to authenticate to Exchange Web Service.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
<dev:type><maml:name>PSCredential</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none"><maml:name>Credential</maml:name>
<maml:Description><maml:para>Credentials used to authenticate to Exchange Web Service.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
<dev:type><maml:name>PSCredential</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Mailbox</maml:name>
<maml:Description><maml:para>Mailbox that supports Exchange Web Services.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>ServiceUrl</maml:name>
<maml:Description><maml:para>Optional URL to service (when specified, auto-discovery is not used).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>Version</maml:name>
<maml:Description><maml:para>Version of Exchange Web Service.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeVersion</command:parameterValue>
<dev:type><maml:name>ExchangeVersion</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>None</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Exchange.WebServices.Data.ExchangeService</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
<dev:code>PS C:\&gt; Connect-EWSService -Mailbox bartek.bielawski@live.com</dev:code>
<dev:remarks><maml:para>Connects to bartek.bielawski@live.com mailbox. Uses default credentials and auto-discovers service URL.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
<dev:code>PS C:\&gt; Connect-EWSService -Mailbox bartek.bielawski@live.com -Credential bartek.bielawski@live.com</dev:code>
<dev:remarks><maml:para>Connects to bartek.bielawski@live.com mailbox. Prompts for bartek.bielawski@live.com password.  Auto-discovers service URL.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-EWSAttachment</command:name>
<command:verb>Get</command:verb>
<command:noun>EWSAttachment</command:noun>
<maml:description><maml:para>Gets attachments from selected item.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Function that allows user to get attachment from item or items. Can be used in combination with Save-EWSAttachment.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-EWSAttachment</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>Item</maml:name>
<maml:Description><maml:para>Item object that contains attachment (retrieved using Get-EWSItem).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Item[]</command:parameterValue>
<dev:type><maml:name>Item[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to get item/attachment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="none"><maml:name>Item</maml:name>
<maml:Description><maml:para>Item object that contains attachment (retrieved using Get-EWSItem).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Item[]</command:parameterValue>
<dev:type><maml:name>Item[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to get item/attachment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Exchange.WebServices.Data.Item[]</maml:name>
</dev:type>
<maml:description><maml:para>Microsoft.Exchange.WebServices.Data.ExchangeService
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Exchange.WebServices.Data.FileAttachment</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
<dev:code>PS C:\&gt; $item = Get-EWSItem -Name Inbox -Filter 'from:Sebastian and hasAttachment:true' -Limit 1
PS C:\&gt; Get-EWSAttachment -Item $item</dev:code>
<dev:remarks><maml:para>Gets first e-mail sent from 'Sebastian' that has attachments. List any attachment find in this e-mail.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-EWSFolder</command:name>
<command:verb>Get</command:verb>
<command:noun>EWSFolder</command:noun>
<maml:description><maml:para>Gets folder inside selected mailbox.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Function that is used to get folder in given path inside selected mailbox. The path needs to start with one of the well known folders (such as Inbox, or Calendar). Behavior is different depending on the completeness of the path: - complete path specified - target folder returned
</maml:para>
<maml:para>- partial path specified - parent and all matching child folders will be returned.
</maml:para>
<maml:para>
</maml:para>
<maml:para>If service/mailbox are not specified, default values are used: - for service - last service that user connected to in the current session
</maml:para>
<maml:para>- for mailbox - matching mailbox from the last connected service.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-EWSFolder</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Path</maml:name>
<maml:Description><maml:para>Path to folder inside the mailbox with two formats supported: WellKnownFolder\Full\Match - returns selected folder WellKnownFolder\Partial\MatchTo - returns parent folder and any folder matching to MatchTo.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service used to communicate with selected mailbox.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none"><maml:name>Mailbox</maml:name>
<maml:Description><maml:para>Mailbox where folder is located.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Mailbox</command:parameterValue>
<dev:type><maml:name>Mailbox</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none"><maml:name>Mailbox</maml:name>
<maml:Description><maml:para>Mailbox where folder is located.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Mailbox</command:parameterValue>
<dev:type><maml:name>Mailbox</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Path</maml:name>
<maml:Description><maml:para>Path to folder inside the mailbox with two formats supported: WellKnownFolder\Full\Match - returns selected folder WellKnownFolder\Partial\MatchTo - returns parent folder and any folder matching to MatchTo.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service used to communicate with selected mailbox.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>None</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Exchange.WebServices.Data.Folder</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
<dev:code>PS C:\&gt; Get-EWSFolder -Path Inbox</dev:code>
<dev:remarks><maml:para>Object representing Inbox in the last connected service is returned.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
<dev:code>PS C:\&gt; Get-EWSFolder -Path Inbox\A</dev:code>
<dev:remarks><maml:para>Result depends on the presence of folder A. If folder 'A' doesn't exist, object representing Inbox in the last connected service is returned. If there is any folder underneath the Inbox with name that matches A, it's returned too. Finally if A exists, only that folder is returned.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
<dev:code>PS C:\&gt; Get-EWSFolder -Path Calendar -Service $myService</dev:code>
<dev:remarks><maml:para>Object representing Calendar in the $myService service is returned.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Get-EWSItem</command:name>
<command:verb>Get</command:verb>
<command:noun>EWSItem</command:noun>
<maml:description><maml:para>Gets items inside selected mailbox and specified folder.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Functions used to get items from the selected folder inside mailbox. Filter is required and uses AQL syntax. You can read more about it here: https://msdn.microsoft.com/en-us/library/office/dn579420(v=exchg.150).aspx.
</maml:para>
<maml:para>Folders can be specified by Name (for well known folder names, like Inbox) or by Id (works for both well known and custom folders). For custom folders it's recommended to use Get-EWSFolder command first, and pipe results from it into Get-EWSItem.
</maml:para>
<maml:para>By default not all properties are returned - behavior that can be changed by specifying PropertySet.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Get-EWSItem</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Filter</maml:name>
<maml:Description><maml:para>Filter that will be used to get items needed. Uses AQL syntax (https://msdn.microsoft.com/en-us/library/office/dn579420(v=exchg.150).aspx)
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Id</maml:name>
<maml:Description><maml:para>Id of the folder that items will be retrieved from.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">FolderId</command:parameterValue>
<dev:type><maml:name>FolderId</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Limit</maml:name>
<maml:Description><maml:para>Number of items that should be returned in total.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PageSize</maml:name>
<maml:Description><maml:para>Number of items tha should be returned per page of results.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PropertySet</maml:name>
<maml:Description><maml:para>Optional parameter used to change set of properties returned.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">IdOnly</command:parameterValue>
<command:parameterValue required="false" variableLength="false">FirstClassProperties</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">BasePropertySet</command:parameterValue>
<dev:type><maml:name>BasePropertySet</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to retrieve items.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>Get-EWSItem</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Filter</maml:name>
<maml:Description><maml:para>Filter that will be used to get items needed. Uses AQL syntax (https://msdn.microsoft.com/en-us/library/office/dn579420(v=exchg.150).aspx)
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Limit</maml:name>
<maml:Description><maml:para>Number of items that should be returned in total.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Name of the well known folder (e.g. Calendar, Inbox, Contacts)
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">Calendar</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Contacts</command:parameterValue>
<command:parameterValue required="false" variableLength="false">DeletedItems</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Drafts</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Inbox</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Journal</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Notes</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Outbox</command:parameterValue>
<command:parameterValue required="false" variableLength="false">SentItems</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Tasks</command:parameterValue>
<command:parameterValue required="false" variableLength="false">MsgFolderRoot</command:parameterValue>
<command:parameterValue required="false" variableLength="false">PublicFoldersRoot</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Root</command:parameterValue>
<command:parameterValue required="false" variableLength="false">JunkEmail</command:parameterValue>
<command:parameterValue required="false" variableLength="false">SearchFolders</command:parameterValue>
<command:parameterValue required="false" variableLength="false">VoiceMail</command:parameterValue>
<command:parameterValue required="false" variableLength="false">RecoverableItemsRoot</command:parameterValue>
<command:parameterValue required="false" variableLength="false">RecoverableItemsDeletions</command:parameterValue>
<command:parameterValue required="false" variableLength="false">RecoverableItemsVersions</command:parameterValue>
<command:parameterValue required="false" variableLength="false">RecoverableItemsPurges</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ArchiveRoot</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ArchiveMsgFolderRoot</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ArchiveDeletedItems</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ArchiveRecoverableItemsRoot</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ArchiveRecoverableItemsDeletions</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ArchiveRecoverableItemsVersions</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ArchiveRecoverableItemsPurges</command:parameterValue>
<command:parameterValue required="false" variableLength="false">SyncIssues</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Conflicts</command:parameterValue>
<command:parameterValue required="false" variableLength="false">LocalFailures</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ServerFailures</command:parameterValue>
<command:parameterValue required="false" variableLength="false">RecipientCache</command:parameterValue>
<command:parameterValue required="false" variableLength="false">QuickContacts</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ConversationHistory</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ToDoSearch</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">WellKnownFolderName</command:parameterValue>
<dev:type><maml:name>WellKnownFolderName</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PageSize</maml:name>
<maml:Description><maml:para>Number of items tha should be returned per page of results.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PropertySet</maml:name>
<maml:Description><maml:para>Optional parameter used to change set of properties returned.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">IdOnly</command:parameterValue>
<command:parameterValue required="false" variableLength="false">FirstClassProperties</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">BasePropertySet</command:parameterValue>
<dev:type><maml:name>BasePropertySet</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to retrieve items.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Filter</maml:name>
<maml:Description><maml:para>Filter that will be used to get items needed. Uses AQL syntax (https://msdn.microsoft.com/en-us/library/office/dn579420(v=exchg.150).aspx)
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Id</maml:name>
<maml:Description><maml:para>Id of the folder that items will be retrieved from.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">FolderId</command:parameterValue>
<dev:type><maml:name>FolderId</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Limit</maml:name>
<maml:Description><maml:para>Number of items that should be returned in total.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Name</maml:name>
<maml:Description><maml:para>Name of the well known folder (e.g. Calendar, Inbox, Contacts)
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">WellKnownFolderName</command:parameterValue>
<dev:type><maml:name>WellKnownFolderName</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PageSize</maml:name>
<maml:Description><maml:para>Number of items tha should be returned per page of results.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
<dev:type><maml:name>Int32</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>PropertySet</maml:name>
<maml:Description><maml:para>Optional parameter used to change set of properties returned.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">BasePropertySet</command:parameterValue>
<dev:type><maml:name>BasePropertySet</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to retrieve items.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Exchange.WebServices.Data.FolderId</maml:name>
</dev:type>
<maml:description><maml:para>Microsoft.Exchange.WebServices.Data.ExchangeService
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Exchange.WebServices.Data.Item</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
<dev:code>PS C:\&gt; Get-EWSFolder Inbox\Urgent | Get-EWSItem -Filter subject:Call</dev:code>
<dev:remarks><maml:para>Gets all items in sub-folder 'Urgent' in Inbox of last connected service/mailbox. Items are filtered out and only items that have a word 'call' somewhere in the subject are returned.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
<dev:code>PS C:\&gt; Get-EWSItem -Name Inbox -Filter body:Azure -Limit 5</dev:code>
<dev:remarks><maml:para>Gets all items in Inbox of last connected service/mailbox. Items are filtered out and only items that have a word 'Azure' somewhere in the body are returned. Results are limited to first 5 results.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Move-EWSFolder</command:name>
<command:verb>Move</command:verb>
<command:noun>EWSFolder</command:noun>
<maml:description><maml:para>Moves folder to a different location.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Function used to move folder from current location to the new location. Destination folder has to exist for move to succeed.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Move-EWSFolder</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>DestinationPath</maml:name>
<maml:Description><maml:para>Path to the folder where the folder should be moved.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none"><maml:name>Folder</maml:name>
<maml:Description><maml:para>Folder object that should be moved (retrieved using Get-EWSFolder).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Folder</command:parameterValue>
<dev:type><maml:name>Folder</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to move folder.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the function.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the function runs. The function is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the function.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>DestinationPath</maml:name>
<maml:Description><maml:para>Path to the folder where the folder should be moved.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none"><maml:name>Folder</maml:name>
<maml:Description><maml:para>Folder object that should be moved (retrieved using Get-EWSFolder).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Folder</command:parameterValue>
<dev:type><maml:name>Folder</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to move folder.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the function runs. The function is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Exchange.WebServices.Data.Folder</maml:name>
</dev:type>
<maml:description><maml:para>Microsoft.Exchange.WebServices.Data.ExchangeService
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>System.Object</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
<dev:code>PS C:\&gt; Get-EWSFolder -Path Inbox\Test | Move-EWSFolder -DestinationPath Inbox\Parent</dev:code>
<dev:remarks><maml:para>Folder 'Test' located inside Inbox is moved as a sub-folder to Inbox\Parent.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
<dev:code>PS C:\&gt; $folder = Get-EWSFolder -Path Inbox\Parent\Test 
PS C:\&gt; Move-EWSFolder -DestinationPath Inbox -Folder $folder</dev:code>
<dev:remarks><maml:para>Folder 'Test' located inside Inbox\Parent is moved as a sub-folder to Inbox.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Move-EWSItem</command:name>
<command:verb>Move</command:verb>
<command:noun>EWSItem</command:noun>
<maml:description><maml:para>Moves item to a different location.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Function used to move item from current location to the new location. Destination folder has to exist for move to succeed.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Move-EWSItem</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>DestinationPath</maml:name>
<maml:Description><maml:para>Path to the folder where the item should be moved.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none"><maml:name>Item</maml:name>
<maml:Description><maml:para>Item object that should be moved (retrieved using Get-EWSItem).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Item</command:parameterValue>
<dev:type><maml:name>Item</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to move item.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the function.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the function runs. The function is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the function.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>DestinationPath</maml:name>
<maml:Description><maml:para>Path to the folder where the item should be moved.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none"><maml:name>Item</maml:name>
<maml:Description><maml:para>Item object that should be moved (retrieved using Get-EWSItem).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Item</command:parameterValue>
<dev:type><maml:name>Item</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to move item.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the function runs. The function is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Exchange.WebServices.Data.Item</maml:name>
</dev:type>
<maml:description><maml:para>Microsoft.Exchange.WebServices.Data.ExchangeService
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>System.Object</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
<dev:code>PS C:\&gt; Get-EWSItem -Name Inbox -Filter subject:test -Limit 1 | Move-EWSItem -DestinationPath Inbox\Moved</dev:code>
<dev:remarks><maml:para>First item found in Inbox with subject that contains word 'test' is moved to Inbox\Moved.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
<dev:code>PS C:\&gt; $item = Get-EWSFolder -Path Inbox\Moved | Get-EWSItem -Filter subject:test -Limit 1
PS C:\&gt; Move-EWSItem -DestinationPath Inbox -Folder $item</dev:code>
<dev:remarks><maml:para>First item found in Inbox\Moved with subject that contains word 'test' is moved to Inbox.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>New-EWSAppointment</command:name>
<command:verb>New</command:verb>
<command:noun>EWSAppointment</command:noun>
<maml:description><maml:para>Creates new appointment.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Function that can be used to create appointments. I requires following fields: - Subject
</maml:para>
<maml:para>- Body
</maml:para>
<maml:para>- Start
</maml:para>
<maml:para>- Duration
</maml:para>
<maml:para>
</maml:para>
<maml:para>Optional parameters that can be used: - Required (required attendees)
</maml:para>
<maml:para>- Optional (optional attendees)
</maml:para>
<maml:para>- BodyType (type of the body)
</maml:para>
<maml:para>- Location
</maml:para>
<maml:para>- Attachment
</maml:para>
<maml:para>
</maml:para>
<maml:para>You can pipe in the body of appointment. If the body is in HTML format, use -IsHtml flag.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>New-EWSAppointment</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Attachment</maml:name>
<maml:Description><maml:para>Paths to attachments that should be added to the new appointment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Body</maml:name>
<maml:Description><maml:para>Body of the appointment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>BodyType</maml:name>
<maml:Description><maml:para>Type of body of the appointment. Text is used if not specified.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">HTML</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Text</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">BodyType</command:parameterValue>
<dev:type><maml:name>BodyType</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Duration</maml:name>
<maml:Description><maml:para>Duration of the appointment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Location</maml:name>
<maml:Description><maml:para>Location of the appointment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Optional</maml:name>
<maml:Description><maml:para>List of optional attendees.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Required</maml:name>
<maml:Description><maml:para>List of required attendees.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service used to create new appointment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Start</maml:name>
<maml:Description><maml:para>Date/time of the appointment start.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
<dev:type><maml:name>DateTime</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Subject</maml:name>
<maml:Description><maml:para>Subject of the appointment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>New-EWSAppointment</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Attachment</maml:name>
<maml:Description><maml:para>Paths to attachments that should be added to the new appointment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>BodyType</maml:name>
<maml:Description><maml:para>Type of body of the appointment. Text is used if not specified.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">HTML</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Text</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">BodyType</command:parameterValue>
<dev:type><maml:name>BodyType</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Duration</maml:name>
<maml:Description><maml:para>Duration of the appointment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Content piped into the function. It's used to form appointment's body.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
<dev:type><maml:name>Object</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>IsHtml</maml:name>
<maml:Description><maml:para>Flag to specify that piped-in content is already formatted as HTML.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Location</maml:name>
<maml:Description><maml:para>Location of the appointment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Optional</maml:name>
<maml:Description><maml:para>List of optional attendees.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Required</maml:name>
<maml:Description><maml:para>List of required attendees.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service used to create new appointment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Start</maml:name>
<maml:Description><maml:para>Date/time of the appointment start.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
<dev:type><maml:name>DateTime</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Subject</maml:name>
<maml:Description><maml:para>Subject of the appointment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Attachment</maml:name>
<maml:Description><maml:para>Paths to attachments that should be added to the new appointment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Body</maml:name>
<maml:Description><maml:para>Body of the appointment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>BodyType</maml:name>
<maml:Description><maml:para>Type of body of the appointment. Text is used if not specified.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">BodyType</command:parameterValue>
<dev:type><maml:name>BodyType</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Duration</maml:name>
<maml:Description><maml:para>Duration of the appointment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
<dev:type><maml:name>TimeSpan</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Content piped into the function. It's used to form appointment's body.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
<dev:type><maml:name>Object</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>IsHtml</maml:name>
<maml:Description><maml:para>Flag to specify that piped-in content is already formatted as HTML.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Location</maml:name>
<maml:Description><maml:para>Location of the appointment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Optional</maml:name>
<maml:Description><maml:para>List of optional attendees.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Required</maml:name>
<maml:Description><maml:para>List of required attendees.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service used to create new appointment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Start</maml:name>
<maml:Description><maml:para>Date/time of the appointment start.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
<dev:type><maml:name>DateTime</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Subject</maml:name>
<maml:Description><maml:para>Subject of the appointment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>System.Object</maml:name>
</dev:type>
<maml:description><maml:para>Microsoft.Exchange.WebServices.Data.ExchangeService
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Exchange.WebServices.Data.Appointment</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
<dev:code>PS C:\&gt; New-EWSAppointment -Subject Dentist -Body 'Visit Dentist' -Start (Get-Date).AddDays(1) -Duration 0:30:0</dev:code>
<dev:remarks><maml:para>Creates appointment in the calendar about Dentist visit planned for tomorrow that will take half of an hour.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>New-EWSContact</command:name>
<command:verb>New</command:verb>
<command:noun>EWSContact</command:noun>
<maml:description><maml:para>Creates new contacts using provided contact details.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Function that helps creating new contacts. It accepts single hash table for phone and physical address with details of the contact. Keys of these hash tables need to match with the types defined for a given contact, e.g.: Phone: HomePhone, MobilePhone PhysicalAddress: Home, Business
</maml:para>
<maml:para>Emails, on the other hand, accepts array of hash tables, each with two keys: DisplayName and email.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>New-EWSContact</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>GivenName</maml:name>
<maml:Description><maml:para>First name of the contact.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>Surname</maml:name>
<maml:Description><maml:para>Last name of the contact.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none"><maml:name>MiddleName</maml:name>
<maml:Description><maml:para>Middle name of the contact.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none"><maml:name>Company</maml:name>
<maml:Description><maml:para>Name of the contact's company.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none"><maml:name>Phone</maml:name>
<maml:Description><maml:para>Hash table with phone details of the contact, each key has to match to phone type.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
<dev:type><maml:name>Hashtable</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="none"><maml:name>Email</maml:name>
<maml:Description><maml:para>Collection of hash tables with two keys: Email and DisplayName.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Hashtable[]</command:parameterValue>
<dev:type><maml:name>Hashtable[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="6" aliases="none"><maml:name>PhysicalAddress</maml:name>
<maml:Description><maml:para>Hash table with physical address details of the contact, each key has to match to physical address type. Each value is another hash table with keys matching to properties of the address.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
<dev:type><maml:name>Hashtable</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="7" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service used to create new contact.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none"><maml:name>Company</maml:name>
<maml:Description><maml:para>Name of the contact's company.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="none"><maml:name>Email</maml:name>
<maml:Description><maml:para>Collection of hash tables with two keys: Email and DisplayName.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Hashtable[]</command:parameterValue>
<dev:type><maml:name>Hashtable[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>GivenName</maml:name>
<maml:Description><maml:para>First name of the contact.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none"><maml:name>MiddleName</maml:name>
<maml:Description><maml:para>Middle name of the contact.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none"><maml:name>Phone</maml:name>
<maml:Description><maml:para>Hash table with phone details of the contact, each key has to match to phone type.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
<dev:type><maml:name>Hashtable</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="6" aliases="none"><maml:name>PhysicalAddress</maml:name>
<maml:Description><maml:para>Hash table with physical address details of the contact, each key has to match to physical address type. Each value is another hash table with keys matching to properties of the address.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
<dev:type><maml:name>Hashtable</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="7" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service used to create new contact.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>Surname</maml:name>
<maml:Description><maml:para>Last name of the contact.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Exchange.WebServices.Data.ExchangeService</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Exchange.WebServices.Data.Contact</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
<dev:code>PS C:\&gt; New-EWSContact -GivenName John -Surname Doe</dev:code>
<dev:remarks><maml:para>Create new contact for 'John Doe' without any details populated.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
<dev:code>PS C:\&gt; $mails = @{ DisplayName = 'John Doe'; email = 'johndoe@live.com' }
PS C:\&gt; $phones = @{ MobilePhone = '+48 601 602 603'; HomePhone = '+48 22 123 4567' }
PS C:\&gt; New-EWSContact -GivenName John -Surname Doe -Email $mails -Phone $phones</dev:code>
<dev:remarks><maml:para>Create new contact for 'John Doe' with e-mail and two phone types specified.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>New-EWSFolder</command:name>
<command:verb>New</command:verb>
<command:noun>EWSFolder</command:noun>
<maml:description><maml:para>Creates sub-folder in the specified parent folder.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Function used to create folders in the folder structure of a mailbox. Parent folder can be specified by name (for well known folder names) or Id.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>New-EWSFolder</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>DisplayName</maml:name>
<maml:Description><maml:para>Display name of the created folder.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>FolderType</maml:name>
<maml:Description><maml:para>Type of the folder to create. Supported types: - Mail (default)
</maml:para>
<maml:para>- Calendar
</maml:para>
<maml:para>- Contacts
</maml:para>
<maml:para>- Tasks
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">Calendar</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Contacts</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Tasks</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Mail</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Mailbox</maml:name>
<maml:Description><maml:para>Mailbox where folder will be created.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Mailbox</command:parameterValue>
<dev:type><maml:name>Mailbox</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="Id"><maml:name>ParentId</maml:name>
<maml:Description><maml:para>Id of the Parent folder (useful for nested folders).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">FolderId</command:parameterValue>
<dev:type><maml:name>FolderId</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to create a folder.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>New-EWSFolder</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>DisplayName</maml:name>
<maml:Description><maml:para>Display name of the created folder.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>FolderType</maml:name>
<maml:Description><maml:para>Type of the folder to create. Supported types: - Mail (default)
</maml:para>
<maml:para>- Calendar
</maml:para>
<maml:para>- Contacts
</maml:para>
<maml:para>- Tasks
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">Calendar</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Contacts</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Tasks</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Mail</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Mailbox</maml:name>
<maml:Description><maml:para>Mailbox where folder will be created.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Mailbox</command:parameterValue>
<dev:type><maml:name>Mailbox</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ParentName</maml:name>
<maml:Description><maml:para>Well known name of the parent folder (e.g. Inbox, Calendar).
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">Calendar</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Contacts</command:parameterValue>
<command:parameterValue required="false" variableLength="false">DeletedItems</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Drafts</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Inbox</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Journal</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Notes</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Outbox</command:parameterValue>
<command:parameterValue required="false" variableLength="false">SentItems</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Tasks</command:parameterValue>
<command:parameterValue required="false" variableLength="false">MsgFolderRoot</command:parameterValue>
<command:parameterValue required="false" variableLength="false">PublicFoldersRoot</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Root</command:parameterValue>
<command:parameterValue required="false" variableLength="false">JunkEmail</command:parameterValue>
<command:parameterValue required="false" variableLength="false">SearchFolders</command:parameterValue>
<command:parameterValue required="false" variableLength="false">VoiceMail</command:parameterValue>
<command:parameterValue required="false" variableLength="false">RecoverableItemsRoot</command:parameterValue>
<command:parameterValue required="false" variableLength="false">RecoverableItemsDeletions</command:parameterValue>
<command:parameterValue required="false" variableLength="false">RecoverableItemsVersions</command:parameterValue>
<command:parameterValue required="false" variableLength="false">RecoverableItemsPurges</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ArchiveRoot</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ArchiveMsgFolderRoot</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ArchiveDeletedItems</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ArchiveRecoverableItemsRoot</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ArchiveRecoverableItemsDeletions</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ArchiveRecoverableItemsVersions</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ArchiveRecoverableItemsPurges</command:parameterValue>
<command:parameterValue required="false" variableLength="false">SyncIssues</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Conflicts</command:parameterValue>
<command:parameterValue required="false" variableLength="false">LocalFailures</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ServerFailures</command:parameterValue>
<command:parameterValue required="false" variableLength="false">RecipientCache</command:parameterValue>
<command:parameterValue required="false" variableLength="false">QuickContacts</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ConversationHistory</command:parameterValue>
<command:parameterValue required="false" variableLength="false">ToDoSearch</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">WellKnownFolderName</command:parameterValue>
<dev:type><maml:name>WellKnownFolderName</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to create a folder.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>DisplayName</maml:name>
<maml:Description><maml:para>Display name of the created folder.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>FolderType</maml:name>
<maml:Description><maml:para>Type of the folder to create. Supported types: - Mail (default)
</maml:para>
<maml:para>- Calendar
</maml:para>
<maml:para>- Contacts
</maml:para>
<maml:para>- Tasks
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Mailbox</maml:name>
<maml:Description><maml:para>Mailbox where folder will be created.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Mailbox</command:parameterValue>
<dev:type><maml:name>Mailbox</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="Id"><maml:name>ParentId</maml:name>
<maml:Description><maml:para>Id of the Parent folder (useful for nested folders).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">FolderId</command:parameterValue>
<dev:type><maml:name>FolderId</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>ParentName</maml:name>
<maml:Description><maml:para>Well known name of the parent folder (e.g. Inbox, Calendar).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">WellKnownFolderName</command:parameterValue>
<dev:type><maml:name>WellKnownFolderName</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to create a folder.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>System.String</maml:name>
</dev:type>
<maml:description><maml:para>Microsoft.Exchange.WebServices.Data.FolderId Microsoft.Exchange.WebServices.Data.ExchangeService
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Exchange.WebServices.Data.Folder</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
<dev:code>PS C:\&gt; New-EWSFolder -ParentName Inbox -DisplayName FooBar</dev:code>
<dev:remarks><maml:para>Create sub-folder FooBar in the folder Inbox.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
<dev:code>PS C:\&gt; Get-EWSFolder -Path Contacts\Parent | New-EWSFolder -DisplayName Child -FolderType Contacts</dev:code>
<dev:remarks><maml:para>Create sub-folder Child designed to store Contacts inside Contacts\Parent.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>New-EWSMessage</command:name>
<command:verb>New</command:verb>
<command:noun>EWSMessage</command:noun>
<maml:description><maml:para>Creates e-mail message.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Function that can be used to create e-mails. Required parameters: - To
</maml:para>
<maml:para>- Subject
</maml:para>
<maml:para>- Body
</maml:para>
<maml:para>
</maml:para>
<maml:para>Latter can be piped in the function.
</maml:para>
<maml:para>Optional parameters: - Cc/Bcc
</maml:para>
<maml:para>- BodyType
</maml:para>
<maml:para>- Attachment
</maml:para>
<maml:para>
</maml:para>
<maml:para>E-mail is sent and saved to 'Sent Items' folder.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>New-EWSMessage</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Attachment</maml:name>
<maml:Description><maml:para>Paths to attachments that should be added to the message.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Bcc</maml:name>
<maml:Description><maml:para>Background carbon copy - hidden recipients of the e-mail.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Body</maml:name>
<maml:Description><maml:para>Body of the e-mail.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>BodyType</maml:name>
<maml:Description><maml:para>Type of the e-mail body. The default is Text.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">HTML</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Text</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">BodyType</command:parameterValue>
<dev:type><maml:name>BodyType</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Cc</maml:name>
<maml:Description><maml:para>Carbon copy - indirect recipients of the e-mail.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service used to create/send message.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Subject</maml:name>
<maml:Description><maml:para>Subject of the created message.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>To</maml:name>
<maml:Description><maml:para>Main recipients of the message.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
<command:syntaxItem><maml:name>New-EWSMessage</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Attachment</maml:name>
<maml:Description><maml:para>Paths to attachments that should be added to the message.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Bcc</maml:name>
<maml:Description><maml:para>Background carbon copy - hidden recipients of the e-mail.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>BodyType</maml:name>
<maml:Description><maml:para>Type of the e-mail body. The default is Text.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">HTML</command:parameterValue>
<command:parameterValue required="false" variableLength="false">Text</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">BodyType</command:parameterValue>
<dev:type><maml:name>BodyType</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Cc</maml:name>
<maml:Description><maml:para>Carbon copy - indirect recipients of the e-mail.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Input text that will be used as a message body.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
<dev:type><maml:name>Object</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>IsHtml</maml:name>
<maml:Description><maml:para>Flag to specify that command input is already converted to HTML.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service used to create/send message.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Subject</maml:name>
<maml:Description><maml:para>Subject of the created message.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>To</maml:name>
<maml:Description><maml:para>Main recipients of the message.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Attachment</maml:name>
<maml:Description><maml:para>Paths to attachments that should be added to the message.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Bcc</maml:name>
<maml:Description><maml:para>Background carbon copy - hidden recipients of the e-mail.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Body</maml:name>
<maml:Description><maml:para>Body of the e-mail.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>BodyType</maml:name>
<maml:Description><maml:para>Type of the e-mail body. The default is Text.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">BodyType</command:parameterValue>
<dev:type><maml:name>BodyType</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Cc</maml:name>
<maml:Description><maml:para>Carbon copy - indirect recipients of the e-mail.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="none"><maml:name>InputObject</maml:name>
<maml:Description><maml:para>Input text that will be used as a message body.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
<dev:type><maml:name>Object</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>IsHtml</maml:name>
<maml:Description><maml:para>Flag to specify that command input is already converted to HTML.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service used to create/send message.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>Subject</maml:name>
<maml:Description><maml:para>Subject of the created message.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><maml:name>To</maml:name>
<maml:Description><maml:para>Main recipients of the message.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>System.Object</maml:name>
</dev:type>
<maml:description><maml:para>Microsoft.Exchange.WebServices.Data.ExchangeService
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Microsoft.Exchange.WebServices.Data.EmailMessage</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
<dev:code>PS C:\&gt; New-EWSMessage -To MrBeans@gmail.com -Subject Test -Body 'Mic test: 1... 2... 3...'</dev:code>
<dev:remarks><maml:para>Sends e-mail to MrBeans@gmail.com using last connected service with subject Test and specified body.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
<dev:code>PS C:\&gt; $html = Get-ChildItem | Select-Object -Property Name, Length, LastWriteTime | ConvertTo-Html 
PS C:\&gt; $html | New-EWSMessage -To MrBeans@gmail.com -Subject Test -Body 'Mic test: 1... 2... 3...' -IsHtml -BodyType HTML</dev:code>
<dev:remarks><maml:para>Generates HTML document from the output of Get-ChildITem Sends e-mail to MrBeans@gmail.com using last connected service with subject Test and $html as HTML body.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Remove-EWSFolder</command:name>
<command:verb>Remove</command:verb>
<command:noun>EWSFolder</command:noun>
<maml:description><maml:para>Removes folder in a specified delete mode.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Function used to remove folder in one of three ways: - HardDelete 
</maml:para>
<maml:para>- SoftDelete
</maml:para>
<maml:para>- MoveToDeletedItems.
</maml:para>
<maml:para>All items in the folder are deleted too.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Remove-EWSFolder</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>DeleteMode</maml:name>
<maml:Description><maml:para>Mode used to delete folder. If not specified, MoveToDeletedItems mode is used.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">HardDelete</command:parameterValue>
<command:parameterValue required="false" variableLength="false">SoftDelete</command:parameterValue>
<command:parameterValue required="false" variableLength="false">MoveToDeletedItems</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">DeleteMode</command:parameterValue>
<dev:type><maml:name>DeleteMode</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to remove folder.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="2" aliases="none"><maml:name>Folder</maml:name>
<maml:Description><maml:para>Folder object that should be removed (retrieved using Get-EWSFolder).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Folder</command:parameterValue>
<dev:type><maml:name>Folder</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the function.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the function runs. The function is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the function.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>DeleteMode</maml:name>
<maml:Description><maml:para>Mode used to delete folder. If not specified, MoveToDeletedItems mode is used.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">DeleteMode</command:parameterValue>
<dev:type><maml:name>DeleteMode</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="2" aliases="none"><maml:name>Folder</maml:name>
<maml:Description><maml:para>Folder object that should be removed (retrieved using Get-EWSFolder).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Folder</command:parameterValue>
<dev:type><maml:name>Folder</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to remove folder.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the function runs. The function is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Exchange.WebServices.Data.ExchangeService</maml:name>
</dev:type>
<maml:description><maml:para>Microsoft.Exchange.WebServices.Data.Folder
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>System.Object</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
<dev:code>PS C:\&gt; Get-EWSFolder -Path Inbox\ToDelete | Remove-EWSFolder</dev:code>
<dev:remarks><maml:para>Prompts user to confirm deletion of Inbox\ToDelete folder. Once confirmed delete folder using MoveToDeletedItems (default) DeleteMode.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
<dev:code>PS C:\&gt; $folder = Get-EWSFolder -Path Inbox\ToDelete
PS C:\&gt; Remove-EWSFolder -Folder $folder -DeleteMode HardDelete -Confirm:$false</dev:code>
<dev:remarks><maml:para>Deletes Inbox\ToDelete folder using HardDelete mode.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Remove-EWSItem</command:name>
<command:verb>Remove</command:verb>
<command:noun>EWSItem</command:noun>
<maml:description><maml:para>Removes item in a specified delete mode.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Function used to remove item in one of three ways: - HardDelete 
</maml:para>
<maml:para>- SoftDelete
</maml:para>
<maml:para>- MoveToDeletedItems.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Remove-EWSItem</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>DeleteMode</maml:name>
<maml:Description><maml:para>Mode used to delete item. If not specified, MoveToDeletedItems mode is used.
</maml:para>
</maml:Description>
<command:parameterValueGroup><command:parameterValue required="false" variableLength="false">HardDelete</command:parameterValue>
<command:parameterValue required="false" variableLength="false">SoftDelete</command:parameterValue>
<command:parameterValue required="false" variableLength="false">MoveToDeletedItems</command:parameterValue>
</command:parameterValueGroup>
<command:parameterValue required="true" variableLength="false">DeleteMode</command:parameterValue>
<dev:type><maml:name>DeleteMode</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to remove item.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="2" aliases="none"><maml:name>Item</maml:name>
<maml:Description><maml:para>Item object that should be removed (retrieved using Get-EWSItem).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Item</command:parameterValue>
<dev:type><maml:name>Item</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the function.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the function runs. The function is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the function.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>DeleteMode</maml:name>
<maml:Description><maml:para>Mode used to delete item. If not specified, MoveToDeletedItems mode is used.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">DeleteMode</command:parameterValue>
<dev:type><maml:name>DeleteMode</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="2" aliases="none"><maml:name>Item</maml:name>
<maml:Description><maml:para>Item object that should be removed (retrieved using Get-EWSItem).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">Item</command:parameterValue>
<dev:type><maml:name>Item</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to remove item.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the function runs. The function is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Exchange.WebServices.Data.ExchangeService</maml:name>
</dev:type>
<maml:description><maml:para>Microsoft.Exchange.WebServices.Data.Item
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>System.Object</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
<dev:code>PS C:\&gt; Get-EWSFolder -Path Inbox\ToDelete | Get-EWSItem -Filter IsRead:true | Remove-EWSItem</dev:code>
<dev:remarks><maml:para>Prompts user to confirm deletion of read (IsRead:true) items in Inbox\ToDelete folder. Once confirmed delete items using MoveToDeletedItems (default) DeleteMode.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
<dev:code>PS C:\&gt; $item = Get-EWSFolder -Path Inbox\ToDelete | Get-EWSItem -Filter IsRead:true -Limit 1
PS C:\&gt; Remove-EWSItem -Folder $item -DeleteMode HardDelete -Confirm:$false</dev:code>
<dev:remarks><maml:para>Deletes first read (IsRead:true) item from Inbox\ToDelete folder using HardDelete mode.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Save-EWSAttachment</command:name>
<command:verb>Save</command:verb>
<command:noun>EWSAttachment</command:noun>
<maml:description><maml:para>Saves attachment (or attachments) to disk.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>Function used to save attachments found in items to disk. Need to be used in combination with Get-EWSAttachment.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Save-EWSAttachment</maml:name>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Path</maml:name>
<maml:Description><maml:para>Folder where attachments should be saved.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>Attachment</maml:name>
<maml:Description><maml:para>Attachment object that should be saved to disk (retrieved using Get-EWSAttachment).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">FileAttachment[]</command:parameterValue>
<dev:type><maml:name>FileAttachment[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to get/save attachment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the function.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the function runs. The function is not run.
</maml:para>
</maml:Description>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none"><maml:name>Attachment</maml:name>
<maml:Description><maml:para>Attachment object that should be saved to disk (retrieved using Get-EWSAttachment).
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">FileAttachment[]</command:parameterValue>
<dev:type><maml:name>FileAttachment[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><maml:name>Confirm</maml:name>
<maml:Description><maml:para>Prompts you for confirmation before running the function.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none"><maml:name>Path</maml:name>
<maml:Description><maml:para>Folder where attachments should be saved.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none"><maml:name>Service</maml:name>
<maml:Description><maml:para>Service object that will be used to get/save attachment.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">ExchangeService</command:parameterValue>
<dev:type><maml:name>ExchangeService</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><maml:name>WhatIf</maml:name>
<maml:Description><maml:para>Shows what would happen if the function runs. The function is not run.
</maml:para>
</maml:Description>
<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
<dev:type><maml:name>SwitchParameter</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>False</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>Microsoft.Exchange.WebServices.Data.FileAttachment[]</maml:name>
</dev:type>
<maml:description><maml:para>Microsoft.Exchange.WebServices.Data.ExchangeService
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>System.Object</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
<dev:code>PS C:\&gt; $item = Get-EWSItem -Name Inbox -Filter 'from:Sebastian and hasAttachment:true' -Limit 1
PS C:\&gt; Get-EWSAttachment -Item $item | Save-EWSAttachment -Path c:\temp\</dev:code>
<dev:remarks><maml:para>Saves attachment from e-mail to c:\temp\ folder.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
</helpItems>
